package com.tamzeveloper.problems;

/**
 * Created by tahmina on 15-05-29.
 */

import org.junit.Test;

import static org.hamcrest.CoreMatchers.is;
import static org.hamcrest.MatcherAssert.assertThat;

/**
 *
 * Each new term in the Fibonacci sequence is generated by adding the previous two terms.
 * By starting with 1 and 2, the first 10 terms will be:

   1, 2, 3, 5, 8, 13, 21, 34, 55, 89, ...

 By considering the terms in the Fibonacci sequence whose values do not exceed four million,
 find the sum of the even-valued terms.


 *
 *
 */


public class Problem2 {


    private  int sumOfEvenFibonacciTerms(int max) {

        int sum=0;
        int next=1;
        int last=1;
        int temp=0;

        while (next<max){
            temp=next;

            next=next+last;

            last =temp;
            if(next%2==0){
                sum+=next;
            }
        }
        return sum;

    }

 public static int fibonacci(int num){

        if(num==1 || num == 0)
            return num;
        else
            return fibonacci(num - 1)+fibonacci(num - 2);
    }
 public static int fibonacci2(int term,int val,int prev){

     if(term==0)
         return prev;
     if(term==1)
         return val;
     return fibonacci2(term-1,val+prev,val);
 }

    public static void printFibonacciSeq(int num){


        int sum=0;
        int f=0;
        for(int i=num+1;i>1;i--){

            f=fibonacci2(i,1,0);
            if(f>4000000){
                System.out.println("Getting out");
                break;
            }
            if(f%2==0)
                sum+=f;
        }

        System.out.println("Even Value is : "+sum);
    }




    @Test(timeout=50)
    public void TestsumOfEvenFibonacciTerms(){

        int sumOfEvenFibonacci=sumOfEvenFibonacciTerms(4_000_000);
        System.out.println("\nSum of fibonnachi = "+sumOfEvenFibonacci);
        assertThat("Incorrect sum of Even FIbonacci",sumOfEvenFibonacci, is(4613732));


    }
}
